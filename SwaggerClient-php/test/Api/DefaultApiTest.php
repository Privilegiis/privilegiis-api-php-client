<?php
/**
 * DefaultApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Privilegiis Partner API
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * DefaultApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DefaultApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for createPrivilegeRequest
     *
     * Create a request for consuming a privilege. Antes de llamar a este metodo hemos tenido que realizar una llamada a getPrivilege. Este metodo nos devuelve un transactionId que hay que pasar ha este metodo para confirmar que el privilegio devuelto se ha consumido..
     *
     */
    public function testCreatePrivilegeRequest()
    {

    }

    /**
     * Test case for getBestPrivilege
     *
     * Obtener el mejor privilegio para un nif y un importe desde un proveedor. Un proveedor consultará con sus credenciales los privilegioss que un cliente final puede disfrutar en su establecimiento para un importe de compra definido. Los datos del proveedor se obtienen del contexto de seguridad, mientras que los datos del beneficiario de los privilegios y el importe de la compra deben informarse en el Query String de la URL.
     *
     */
    public function testGetBestPrivilege()
    {

    }

    /**
     * Test case for getPrivilegeByToken
     *
     * Obtener el mejor privilegio para un token y un importe desde un proveedor. Un proveedor consultará con sus credenciales los privilegioss que un cliente final puede disfrutar en su establecimiento para un importe de compra definido. Los datos del proveedor se obtienen del contexto de seguridad, mientras que los datos del beneficiario de los privilegios y el importe de la compra deben informarse en el Query String de la URL.
     *
     */
    public function testGetPrivilegeByToken()
    {

    }

    /**
     * Test case for getPrivilegeValidations
     *
     * Obtener una lista cronológica inversa de todos las solicitudes de privilegio realizadas a través del proveedor autorizado.
     *
     */
    public function testGetPrivilegeValidations()
    {

    }

}
